---
plugins: ${file(./serverless_plugins.yml):${self:provider.stage}}

service:
  name: slack-apis

frameworkVersion: '>=1.0.0'

provider:
  name: aws
  runtime: ruby2.5
  region: ${env:AWS_REGION, 'us-east-2'}
  memorySize: 256
  deploymentBucket:
    name: ${env:SERVERLESS_BUCKET_NAME}
  deploymentPrefix: serverless
  apiKeys:
    - default_key_for_slack_api
  tracing:
    apiGateway: true

package:
  include:
    - lib/**
    - bin/**
    - vendor/**
  exclude:
    - scripts/**
    - secrets/**
    - infra/**
    - docker-compose.*
    - .terraform/**
    - spec/**
    - .env*

functions:
  auth:
    handler: bin/slack-api.begin_authentication
    description: Function that directs the user to start the Slack OAuth flow.
    timeout: 30
    environment:
      GEM_PATH: vendor/bundle
      SLACK_APP_CLIENT_ID: ${env:SLACK_APP_CLIENT_ID}
      APP_AWS_ACCESS_KEY_ID: ${file(./secrets/app_account_ak)}
      APP_AWS_SECRET_ACCESS_KEY: ${file(./secrets/app_account_sk)}
    events:
      - http:
          path: auth
          method: get
          private: true
          request:
            template:
              application/json: '{ "apiKey": "$context.identity.apiKey" }'
  callback:
    handler: bin/slack-api.handle_callback
    description: Function that receives Slack OAuth callbacks.
    timeout: 30
    environment:
      GEM_PATH: vendor/bundle
      SLACK_APP_CLIENT_ID: ${env:SLACK_APP_CLIENT_ID}
      SLACK_APP_CLIENT_SECRET: ${env:SLACK_APP_CLIENT_SECRET}
      APP_AWS_ACCESS_KEY_ID: ${file(./secrets/app_account_ak)}
      APP_AWS_SECRET_ACCESS_KEY: ${file(./secrets/app_account_sk)}
    events:
      - http:
          path: callback
          method: get
  getToken:
    handler: bin/slack-api.get_token
    description: Retrieves tokens for authenticated users.
    timeout: 30
    environment:
      GEM_PATH: vendor/bundle
      APP_AWS_ACCESS_KEY_ID: ${file(./secrets/app_account_ak)}
      APP_AWS_SECRET_ACCESS_KEY: ${file(./secrets/app_account_sk)}
    events:
      - http:
          path: getToken
          method: get
          private: true
          request:
            template:
              application/json: '{ "apiKey": "$context.identity.apiKey" }'
  ping:
    handler: bin/slack-api.ping
    description: Healthiness endpoint for APIs.
    timeout: 30
    environment:
      GEM_PATH: vendor/bundle
    events:
      - http:
          path: ping
          method: get

custom:
  stage: "${opt:stage, self:provider.stage}"
  production:
    customDomain:
      domainName: ${env:DOMAIN_PATH}.${env:DOMAIN_TLD}
      basePath: ''
      createRoute53Record: true
